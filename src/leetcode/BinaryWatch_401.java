package leetcode;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by yongfeng on 17/3/20.
 */
public class BinaryWatch_401 {
    public List<String> readBinaryWatch(int num) {
        List<String> res = new ArrayList<>();
        if(num < 1  ){
            res.add("0:00");
            return res;
        }
        boolean[] cnt = new boolean[10];
        for(int i = 0 ; i < 10; ++i){
            cnt[i] = false;
        }
        helper(cnt,0,num,0,res);
        return res;
    }
    private void helper(boolean[] cnt,int start,int num,int sum,List<String> res){
        for(int i = start ; i < 10; ++i){
            if(!cnt[i] && sum < num){
                cnt[i] = true;
                ++sum;
                if(num == sum){
                    String tmp = getTimeFromCnt(cnt);
                    if(null != tmp){
                        res.add(tmp);
                    }
                }else{
                    helper(cnt,i + 1,num,sum,res);
                }
                --sum;
                cnt[i] = false;
            }
        }
    }

    private String getTimeFromCnt(boolean[] cnt){
        int minuteRes = 0 ,hourRes = 0, tmpHour = 8, tmpMinute = 32;
        for(int i = 0 ; i < 4 ; ++i){
            if(cnt[i]){
                hourRes += tmpHour;
            }
            tmpHour /= 2;
        }
        if(hourRes > 11){
            return null;
        }
        for(int i = 4; i < 10 ; ++i){
            if(cnt[i]){
                minuteRes += tmpMinute;
            }
            tmpMinute /= 2;
        }

        if(minuteRes > 59){
            return null;
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append(hourRes);
        stringBuilder.append(":");
        if(minuteRes < 10){
            stringBuilder.append("0");
        }
        stringBuilder.append(minuteRes);
        return stringBuilder.toString();
    }


    public static void main(String[] args) {
        BinaryWatch_401 binaryWatch_401 = new BinaryWatch_401();
        Map<Integer,List<String>> map = new HashMap<>();
        for(int i = 0 ; i < 10 ; ++i){
            List<String> res = binaryWatch_401.readBinaryWatch(i);
            map.put(i,res);
            System.out.println(res);
        }

        System.out.println("success");
    }
}


/*
["0:15","0:23","0:27","0:29","0:30","0:39","0:43","0:45","0:46","0:51","0:53","0:54","0:57","0:58",
"1:07","1:11","1:13","1:14","1:19","1:21","1:22","1:25","1:26","1:28","1:35","1:37","1:38","1:41","1:42","1:44","1:49","1:50","1:52","1:56",
"2:07","2:11","2:13","2:14","2:19","2:21","2:22","2:25","2:26","2:28","2:35","2:37","2:38","2:41","2:42","2:44","2:49","2:50","2:52","2:56",
"3:03","3:05","3:06","3:09","3:10","3:12","3:17","3:18","3:20","3:24","3:33","3:34","3:36","3:40","3:48",
"4:07","4:11","4:13","4:14","4:19","4:21","4:22","4:25","4:26","4:28","4:35","4:37","4:38","4:41","4:42","4:44","4:49","4:50","4:52","4:56",
"5:03","5:05","5:06","5:09","5:10","5:12","5:17","5:18","5:20","5:24","5:33","5:34","5:36","5:40","5:48",
"6:03","6:05","6:06","6:09","6:10","6:12","6:17","6:18","6:20","6:24","6:33","6:34","6:36","6:40","6:48",
"7:01","7:02","7:04","7:08","7:16","7:32",
"8:07","8:11","8:13","8:14","8:19","8:21","8:22","8:25","8:26","8:28","8:35","8:37","8:38","8:41","8:42","8:44","8:49","8:50","8:52","8:56",
"9:03","9:05","9:06","9:09","9:10","9:12","9:17","9:18","9:20","9:24","9:33","9:34","9:36","9:40","9:48",
"10:03","10:05","10:06","10:09","10:10","10:12","10:17","10:18","10:20","10:24","10:33","10:34","10:36","10:40","10:48",
"11:01","11:02","11:04","11:08","11:16","11:32"]
 */


/*
["11:32","11:16","11:08","11:04","11:02","11:01",
"10:48","10:40","10:36","10:34","10:33","10:24","10:20","10:18","10:17","10:12","10:10","10:09","10:06","10:05","10:03",
"9:48","9:40","9:36","9:34","9:33","9:24","9:20","9:18","9:17","9:12","9:10","9:09","9:06","9:05","9:03",
"8:56","8:52","8:50","8:49","8:44","8:42","8:41","8:38","8:37","8:35","8:28","8:26","8:25","8:22","8:21","8:19","8:14","8:13","8:11","8:07",
"7:32","7:16","7:08","7:04","7:02","7:01",
"6:48","6:40","6:36","6:34","6:33","6:24","6:20","6:18","6:17","6:12","6:10","6:09","6:06","6:05","6:03",
"5:48","5:40","5:36","5:34","5:33","5:24","5:20","5:18","5:17","5:12","5:10","5:09","5:06","5:05","5:03",
"4:56","4:52","4:50","4:49","4:44","4:42","4:41","4:38","4:37","4:35","4:28","4:26","4:25","4:22","4:21","4:19","4:14","4:13","4:11","4:07",
"3:48","3:40","3:36","3:34","3:33","3:24","3:20","3:18","3:17","3:12","3:10","3:09","3:06","3:05","3:03",
"2:56","2:52","2:50","2:49","2:44","2:42","2:41","2:38","2:37","2:35","2:28","2:26","2:25","2:22","2:21","2:19","2:14","2:13","2:11","2:07",
"1:56","1:52","1:50","1:49","1:44","1:42","1:41","1:38","1:37","1:35","1:28","1:26","1:25","1:22","1:21","1:19","1:14","1:13","1:11","1:07",
"0:60","0:58","0:57","0:54","0:53","0:51","0:46","0:45","0:43","0:39","0:30","0:29","0:27","0:23","0:15"]
 */

/*
["10:00",
"9:00",
"8:32","8:16","8:08","8:04","8:02","8:01",
"6:00",
"5:00",
"4:32","4:16","4:08","4:04","4:02","4:01"
,"10:00","6:00","3:00","2:32","2:16","2:08","2:04","2:02","2:01","9:00","5:00","3:00","1:32","1:16","1:08","1:04","1:02","1:01","8:32","4:32","2:32","1:32","0:48","0:40","0:36","0:34","0:33","8:16","4:16","2:16","1:16","0:48","0:24","0:20","0:18","0:17","8:08","4:08","2:08","1:08","0:40","0:24","0:12","0:10","0:09","8:04","4:04","2:04","1:04","0:36","0:20","0:12","0:06","0:05","8:02","4:02","2:02","1:02","0:34","0:18","0:10","0:06","0:03","8:01","4:01","2:01","1:01","0:33","0:17","0:09","0:05","0:03"]
 */

/*
A binary watch has 4 LEDs on the top which represent the hours (0-11), and the 6 LEDs on the bottom represent the minutes (0-59).

Each LED represents a zero or one, with the least significant bit on the right.


For example, the above binary watch reads "3:25".

Given a non-negative integer n which represents the number of LEDs that are currently on, return all possible times the watch could represent.

Example:

Input: n = 1
Return: ["1:00", "2:00", "4:00", "8:00", "0:01", "0:02", "0:04", "0:08", "0:16", "0:32"]
Note:
The order of output does not matter.
The hour must not contain a leading zero, for example "01:00" is not valid, it should be "1:00".
The minute must be consist of two digits and may contain a leading zero, for example "10:2" is not valid, it should be "10:02".
Subscribe to see which companies asked this question.
*/